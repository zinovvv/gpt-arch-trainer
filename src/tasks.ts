export type Task = {
  id: string;
  title: string;
  description: string;
  // Мы больше не будем использовать startPrompt, вся логика будет в stages
  stages: string[]; 
};

export const tasks: Task[] = [
  {
    id: 'crm',
    title: 'Простая CRM',
    description: 'Система для учета клиентов и сделок для малого бизнеса.',
    stages: [
      '1. Сбор требований: Выясни у пользователя, какие основные сущности (пользователи, клиенты, сделки) и функции ему нужны.',
      '2. Проектирование компонентов: Помоги определить основные компоненты (Frontend, Backend, База данных) и технологии для них.',
      '3. Проектирование API: Обсуди, какие основные эндпоинты API понадобятся для CRUD-операций с клиентами и сделками.',
      '4. Нефункциональные требования: Задай вопросы о предполагаемой нагрузке и безопасности данных.',
      '5. Финальная рецензия: Когда пользователь напишет "завершить проектирование", дай краткий обзор получившейся архитектуры, укажи на сильные стороны и возможные риски/улучшения.',
    ],
  },
  {
    id: 'courses',
    title: 'Платформа для курсов',
    description: 'Онлайн-платформа с видео, заданиями и отслеживанием прогресса.',
    stages: [
      '1. Сбор требований: Выясни у пользователя, какие роли (студент, преподаватель) и функции (просмотр видео, тесты) должны быть.',
      '2. Проектирование компонентов: Помоги определить компоненты (Frontend, Backend, Видео-сервис, База данных).',
      '3. Масштабируемость: Обсуди, как хранить и доставлять видеоконтент, чтобы система была масштабируемой.',
      '4. Финальная рецензия: Когда пользователь напишет "завершить проектирование", дай краткий обзор получившейся архитектуры, укажи на сильные стороны и возможные риски/улучшения.',
    ],
  },

  {
    id: 'tracker',
    title: 'Трекер задач (Trello-like)',
    description: 'Система с API и UI для управления задачами на досках.',
    stages: [
      '1. Сбор требований: Спроси у пользователя про основные сущности: Доски (Boards), Колонки (Lists/Columns), и Карточки (Cards). Уточни, нужна ли поддержка пользователей и комментариев.',
      '2. Проектирование API: Помоги спроектировать основные REST API эндпоинты. Например: GET /boards, POST /boards/{id}/lists, GET /lists/{id}/cards, PATCH /cards/{id}.',
      '3. Проектирование компонентов UI: Обсуди, какие основные компоненты будут на фронтенде. Например: компонент доски, компонент колонки, компонент карточки, модальное окно редактирования карточки.',
      '4. Выбор базы данных: Задай вопрос о том, какая база данных лучше подойдет для хранения такой иерархической структуры - реляционная (PostgreSQL) или документо-ориентированная (MongoDB). Обсуди плюсы и минусы.',
      '5. Финальная рецензия: Когда пользователь напишет "завершить проектирование", дай краткий обзор архитектуры API и UI, и предложи возможные улучшения, например, добавление WebSocket для обновлений в реальном времени.',
    ],
  },
];